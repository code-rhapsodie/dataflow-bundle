services:
    _defaults:
        public: false

    CodeRhapsodie\DataflowBundle\Registry\DataflowTypeRegistryInterface: '@CodeRhapsodie\DataflowBundle\Registry\DataflowTypeRegistry'
    CodeRhapsodie\DataflowBundle\Registry\DataflowTypeRegistry:

    CodeRhapsodie\DataflowBundle\Command\AddScheduledDataflowCommand:
        arguments:
            $registry: '@CodeRhapsodie\DataflowBundle\Registry\DataflowTypeRegistryInterface'
            $scheduledDataflowRepository: '@CodeRhapsodie\DataflowBundle\Repository\ScheduledDataflowRepository'
            $validator: '@validator'
            $connectionFactory: '@CodeRhapsodie\DataflowBundle\Factory\ConnectionFactory'
        tags: ['console.command']

    CodeRhapsodie\DataflowBundle\Command\ChangeScheduleStatusCommand:
        arguments:
            $scheduledDataflowRepository: '@CodeRhapsodie\DataflowBundle\Repository\ScheduledDataflowRepository'
            $connectionFactory: '@CodeRhapsodie\DataflowBundle\Factory\ConnectionFactory'
        tags: ['console.command']

    CodeRhapsodie\DataflowBundle\Command\ExecuteDataflowCommand:
        arguments:
            $registry: '@CodeRhapsodie\DataflowBundle\Registry\DataflowTypeRegistryInterface'
            $connectionFactory: '@CodeRhapsodie\DataflowBundle\Factory\ConnectionFactory'
        tags: ['console.command']

    CodeRhapsodie\DataflowBundle\Command\JobShowCommand:
        arguments:
            $jobRepository: '@CodeRhapsodie\DataflowBundle\Repository\JobRepository'
            $connectionFactory: '@CodeRhapsodie\DataflowBundle\Factory\ConnectionFactory'
        tags: ['console.command']

    CodeRhapsodie\DataflowBundle\Command\RunPendingDataflowsCommand:
        arguments:
            $manager: '@CodeRhapsodie\DataflowBundle\Manager\ScheduledDataflowManagerInterface'
            $runner: '@CodeRhapsodie\DataflowBundle\Runner\PendingDataflowRunnerInterface'
            $connectionFactory: '@CodeRhapsodie\DataflowBundle\Factory\ConnectionFactory'
        tags: ['console.command']

    CodeRhapsodie\DataflowBundle\Command\ScheduleListCommand:
        arguments:
            $scheduledDataflowRepository: '@CodeRhapsodie\DataflowBundle\Repository\ScheduledDataflowRepository'
            $connectionFactory: '@CodeRhapsodie\DataflowBundle\Factory\ConnectionFactory'
        tags: ['console.command']

    CodeRhapsodie\DataflowBundle\Command\SchemaCommand:
        arguments:
            $connectionFactory: '@CodeRhapsodie\DataflowBundle\Factory\ConnectionFactory'
        tags: ['console.command']

    CodeRhapsodie\DataflowBundle\Repository\ScheduledDataflowRepository:
        lazy: true
        arguments: ['@coderhapsodie.dataflow.connection']

    CodeRhapsodie\DataflowBundle\Repository\JobRepository:
        lazy: true
        arguments: ['@coderhapsodie.dataflow.connection']

    coderhapsodie.dataflow.connection: "@coderhapsodie.dataflow.connection.internal"

    coderhapsodie.dataflow.connection.internal:
        lazy: true
        class: Doctrine\DBAL\Driver\Connection
        factory: ['@CodeRhapsodie\DataflowBundle\Factory\ConnectionFactory', 'getConnection']

    CodeRhapsodie\DataflowBundle\Factory\ConnectionFactory:
        arguments: ['@service_container', '%coderhapsodie.dataflow.dbal_default_connection%']

    CodeRhapsodie\DataflowBundle\Manager\ScheduledDataflowManagerInterface: '@CodeRhapsodie\DataflowBundle\Manager\ScheduledDataflowManager'
    CodeRhapsodie\DataflowBundle\Manager\ScheduledDataflowManager:
        arguments:
            $connection: '@coderhapsodie.dataflow.connection'
            $scheduledDataflowRepository: '@CodeRhapsodie\DataflowBundle\Repository\ScheduledDataflowRepository'
            $jobRepository: '@CodeRhapsodie\DataflowBundle\Repository\JobRepository'

    CodeRhapsodie\DataflowBundle\Runner\PendingDataflowRunnerInterface: '@CodeRhapsodie\DataflowBundle\Runner\PendingDataflowRunner'
    CodeRhapsodie\DataflowBundle\Runner\PendingDataflowRunner:
        arguments:
            $repository: '@CodeRhapsodie\DataflowBundle\Repository\JobRepository'
            $registry: '@CodeRhapsodie\DataflowBundle\Registry\DataflowTypeRegistryInterface'
            $dispatcher: '@event_dispatcher'
